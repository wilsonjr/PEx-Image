/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visualizer.view;

import br.com.methods.utils.Vect;
import br.com.representative.RepresentativeFinder;
import br.com.representative.RepresentativeRegistry;
import br.com.representative.metric.SSS;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import visualizer.graph.Graph;
import visualizer.graph.Vertex;

/**
 *
 * @author Windows
 */
public class RepresentativeSelectionView extends javax.swing.JFrame {
    private Graph projection;
    private ProjectionViewer gv;
    
    /**
     * Creates new form RepresentativeSelectionView
     */
    public RepresentativeSelectionView(ProjectionViewer gv) {
        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.gv = gv;
        this.projection = gv.getGraph();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        representativeSelectionJButton = new javax.swing.JButton();
        importJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        representativeSelectionJButton.setText("Representative Selection");
        representativeSelectionJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                representativeSelectionJButtonActionPerformed(evt);
            }
        });

        importJButton.setText("Import Representative");
        importJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(237, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(importJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(representativeSelectionJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(importJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                .addComponent(representativeSelectionJButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void representativeSelectionJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_representativeSelectionJButtonActionPerformed
        
        if( projection != null ) {
            List<Vect> elems = new ArrayList<>();
        
            projection.getVertex().stream().forEach((v)-> {
                elems.add(new Vect(new double[]{v.getX(), v.getY()}));
            });
            
            double maxDistance = -1;
            for( int i = 0; i < elems.size(); ++i )
                for( int j = i; j < elems.size(); ++j )
                    maxDistance = Math.max(maxDistance, elems.get(i).distance(elems.get(j)));
            
            
            RepresentativeFinder rf = (RepresentativeFinder) RepresentativeRegistry.getInstance(SSS.class, elems, 0.134, maxDistance); // verificar se é isso msm
            
            
            rf.execute();
            int[] representative = rf.getRepresentatives();
            
            System.out.println("Size: "+representative.length);
            
            
            List<Vertex> vertices = projection.getVertex();
            for( int i = 0; i < representative.length; ++i )
                vertices.get(representative[i]).setRepresentative(true);
            gv.updateImage();
            dispose();
        }
        
    }//GEN-LAST:event_representativeSelectionJButtonActionPerformed

    private void importJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importJButtonActionPerformed
        
        JFileChooser chooser = new JFileChooser();
        int result = chooser.showOpenDialog(this);
        if( result == JFileChooser.APPROVE_OPTION ) {
            
            File file = chooser.getSelectedFile();
            try {
                Scanner scn = new Scanner(file);
                
                List<Integer> indexes = new ArrayList<>();
                
                while( scn.hasNext() )
                    indexes.add(Integer.parseInt(scn.next()));
                
                List<Vertex> vertices = projection.getVertex();
                indexes.stream().forEach((v)->vertices.get(v).setRepresentative(true));
                
                gv.updateImage();
                dispose();
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(RepresentativeSelectionView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_importJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RepresentativeSelectionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RepresentativeSelectionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RepresentativeSelectionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RepresentativeSelectionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RepresentativeSelectionView(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton importJButton;
    private javax.swing.JButton representativeSelectionJButton;
    // End of variables declaration//GEN-END:variables
}
